<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="nanoit.kr.repository.before.MessageRepositoryBefore">
    <!--   default setting   -->
    <update id="createTable"><![CDATA[
        CREATE TABLE IF NOT EXISTS agent_tb
        (
            id                BIGINT AUTO_INCREMENT PRIMARY KEY NOT NULL,
            agent_id          INT(11)                              NOT NULL,
            selected          CHAR(1) DEFAULT '0'                  NOT NULL,
            send_result       CHAR(1) DEFAULT '0'                  NOT NULL,
            receive_result    CHAR(1) DEFAULT '0'                  NOT NULL,
            phone_number      VARCHAR(32)                          NOT NULL,
            callback_number   VARCHAR(32)                          NOT NULL,
            sender_name       VARCHAR(32)                          NOT NULL,
            content           VARCHAR(32)                          NOT NULL,
            send_time         TIMESTAMP DEFAULT NULL,
            receive_time      TIMESTAMP DEFAULT NULL,
            created_at        TIMESTAMP DEFAULT CURRENT_TIMESTAMP  NOT NULL,
            last_modified_at  TIMESTAMP DEFAULT CURRENT_TIMESTAMP  NOT NULL ON UPDATE CURRENT_TIMESTAMP
        );
    ]]></update>

    <!--    =========================================================================================================================================-->
    <!-- common Query -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*)
        FROM agent_tb;
    </select>

    <select id="ping" resultType="java.lang.Boolean">
        SELECT 1;
    </select>

    <delete id="deleteTable">
        DELETE
        FROM agent_tb;
        ALTER TABLE agent_tb AUTO_INCREMENT = 1;
    </delete>

    <delete id="deleteById" parameterType="_long">
        DELETE
        FROM agent_tb
        WHERE id = #{id};
    </delete>

    <select id="selectById" parameterType="java.lang.Long" resultType="nanoit.kr.domain.entity.MessageEntity">
        SELECT id,
               agent_id,
               selected,
               send_result,
               receive_result,
               phone_number,
               callback_number,
               sender_name,
               content,
               send_time,
               receive_time,
               created_at,
               last_modified_at
        FROM agent_tb
        WHERE id = #{id};
    </select>

    <insert id="insert" parameterType="nanoit.kr.domain.entity.MessageEntity">
        INSERT INTO agent_tb(agent_id, phone_number, callback_number, sender_name, content)
        VALUES (#{agentId}, #{phoneNumber}, #{callbackNumber}, #{senderName}, #{content});
    </insert>

    <insert id="insertAll" parameterType="java.util.List">
        INSERT INTO agent_tb (agent_id, phone_number, callback_number, sender_name, content)
        VALUES
        <foreach collection="list" item="item" separator=",">
            (#{item.agentId},#{item.phoneNumber},#{item.callbackNumber},#{item.senderName},#{item.content})
        </foreach>
    </insert>
    <!-- common Query End-->
    <!--    =========================================================================================================================================-->


    <!--    =========================================================================================================================================-->
    <!-- Query settings for receive tables -->
    <select id="receive_count" resultType="java.lang.Long">
        SELECT COUNT(*)
        FROM agent_tb
        WHERE receive_result = '1'
          AND receive_time IS NOT NULL;
    </select>

    <select id="receive_selectById" parameterType="java.lang.Long"
            resultType="nanoit.kr.domain.before.SendAckEntityBefore">
        SELECT id, receive_result, receive_time
        FROM agent_tb
        WHERE id = #{id};
    </select>

    <select id="receive_selectAll" resultType="nanoit.kr.domain.before.SendAckEntityBefore">
        SELECT id, receive_result, receive_time
        FROM agent_tb;
    </select>

    <update id="receive_update" parameterType="java.lang.Long">
        UPDATE agent_tb
        SET receive_result   = '1',
            receive_time     = now(),
            last_modified_at = now()

        WHERE id = #{id}
          AND selected = '1'
          AND send_result = '1';
    </update>
    <!-- Query settings for receive tables End-->
    <!--    =========================================================================================================================================-->


    <!--    =========================================================================================================================================-->
    <!-- Query settings for receive tables -->
    <select id="send_selectAll" resultType="java.util.List">
        SELECT id, phone_num, callback_num, sender_name, content
        FROM agent_tb
        WHERE selected = '0';
    </select>


    <select id="selectAllAndSetSelected" resultType="java.util.List">
        SELECT id, phone_num, callback_num, sender_name, content
        FROM agent_tb WHERE selected = '0'
        <foreach item="item" collection="list" separator="OR">
            UPDATE agent_tb SET selected = '1' WHERE id = #{item.id}
        </foreach>
    </select>

    <update id="send_select_update" parameterType="java.util.List">
        <foreach collection="list" item="item" separator=",">
            UPDATE agent_tb
            SET selected = '1',
            send_time = now(),
            last_modified_at = now()
            WHERE id = #{item.id};
        </foreach>
    </update>

    <update id="send_result_update" parameterType="java.lang.Long">
        UPDATE agent_tb
        SET send_result = '1'
        WHERE id = #{id};
    </update>

</mapper>

