<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="nanoit.kr.repository.MessageRepository">
    <!--   default setting   -->
    <update id="createTable">
        CREATE TABLE IF NOT EXISTS agent_tb
        (
            "id"               BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
            "selected"         char(1)     default '0'                             NOT NULL,
            "send_result"      char(1)     default '0'                             NOT NULL,
            "receive_result"   char(1)     default '0'                             NOT NULL,
            "phone_number"     varchar(32)                                         NOT NULL,
            "callback_number"  varchar(32)                                         NOT NULL,
            "sender_name"      varchar(32)                                         NOT NULL,
            "content"          varchar(32)                                         NOT NULL,
            "send_time"        timestamptz default NULL,
            "receive_time"     timestamptz default NULL,
            "created_at"       timestamptz default now()                           NOT NULL,
            "last_modified_at" timestamptz default now()                           NOT NULL
        );
    </update>

    <!--    =========================================================================================================================================-->
    <!-- common Query -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*)
        FROM agent_tb;
    </select>

    <select id="ping" resultType="java.lang.Boolean">
        SELECT 1;
    </select>

    <delete id="deleteTable">
        DELETE
        FROM agent_tb;
        ALTER SEQUENCE agent_tb_id_seq RESTART WITH 1;
    </delete>

    <delete id="deleteById" parameterType="_long">
        DELETE
        FROM agent_tb
        WHERE id = #{id};
    </delete>

    <select id="selectById" parameterType="java.lang.Long" resultType="nanoit.kr.domain.entity.MessageEntity">
        SELECT id,
               selected,
               send_result,
               receive_result,
               phone_number,
               callback_number,
               sender_name,
               content,
               send_time,
               receive_time,
               created_at,
               last_modified_at
        FROM agent_tb
        WHERE id = #{id};
    </select>

    <insert id="insert" parameterType="nanoit.kr.domain.entity.MessageEntity">
        INSERT INTO agent_tb(phone_number, callback_number, sender_name, content)
        VALUES (#{phoneNumber}, #{callbackNumber}, #{senderName}, #{content});
    </insert>

    <insert id="insertAll" parameterType="java.util.List">
        INSERT INTO agent_tb (phone_number, callback_number, sender_name, content)
        VALUES
        <foreach collection="list" item="item" separator=",">
            (#{item.phoneNumber},#{item.callbackNumber},#{item.senderName},#{item.content})
        </foreach>
    </insert>
    <!-- common Query End-->
    <!--    =========================================================================================================================================-->


    <!--    =========================================================================================================================================-->
    <!-- Query settings for receive tables -->
    <select id="receive_count" resultType="java.lang.Long">
        SELECT COUNT(*)
        FROM agent_tb
        WHERE receive_result = '1'
          AND receive_time IS NOT NULL;
    </select>

    <select id="receive_selectById" parameterType="java.lang.Long"
            resultType="nanoit.kr.domain.entity.MessageEntity">
        SELECT id, receive_result, receive_time
        FROM agent_tb
        WHERE id = #{id};
    </select>

    <select id="receive_selectAll" resultType="nanoit.kr.domain.entity.MessageEntity">
        SELECT id, receive_result, receive_time
        FROM agent_tb
        ORDER BY id;
    </select>

    <update id="receive_update" parameterType="nanoit.kr.domain.entity.SendAckEntity">
        UPDATE agent_tb
        SET receive_result   = #{result},
            receive_time     = now(),
            last_modified_at = now()

        WHERE id = #{messageId}
          AND selected = '1'
          AND send_result = '1';
    </update>

    <!-- Query settings for receive tables End-->
    <!--    =========================================================================================================================================-->


    <!--    =========================================================================================================================================-->
    <!-- Query settings for receive tables -->
    <select id="send_selectAll" resultType="nanoit.kr.domain.entity.MessageEntity">
        SELECT id, phone_number, callback_number, sender_name, content
        FROM agent_tb
        WHERE selected = '0'
        ORDER BY id;
    </select>

    <update id="send_select_update" parameterType="java.util.List">
        UPDATE agent_tb
        SET selected = '1',
        send_time = CURRENT_TIMESTAMP,
        created_at = CURRENT_TIMESTAMP,
        last_modified_at = CURRENT_TIMESTAMP
        WHERE
        <foreach collection="list" item="item" separator=" OR " open="(" close=")">
            id = #{item.id}
        </foreach>
    </update>

    <update id="send_result_updates" parameterType="java.util.List">
        UPDATE agent_tb
        SET send_result = '1'
        WHERE id IN
        <foreach collection="list" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
        AND selected = '1';

    </update>

    <update id="send_result_update" parameterType="_long">
        UPDATE agent_tb
        SET send_result = '1'
        WHERE id = #{item.id}
          AND selected = '1';
    </update>
</mapper>

