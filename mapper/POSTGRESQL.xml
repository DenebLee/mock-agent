<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="nanoit.kr.repository.MessageRepository">

    <!--    =========================================================================================================================================-->

    <!--   default setting   -->
    <update id="createTable">
        CREATE TABLE IF NOT EXISTS "agent_table"
        (
            "id"               BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
            "selected"         varchar(16) DEFAULT 'UNSELECTED'                    NOT NULL,
            "phone_number"     varchar(32)                                         NOT NULL,
            "send_result"      varchar(32) DEFAULT 'FAILED'                        NOT NULL,
            "callback_number"  varchar(32)                                         NOT NULL,
            "sender_name"      varchar(64)                                         NOT NULL,
            "content"          varchar(255)                                        NOT NULL,
            "send_time"        timestamptz DEFAULT NULL,
            "receive_result"   varchar(32) DEFAULT 'FAILED'                        NOT NULL,
            "receive_time"     timestamptz DEFAULT NULL,
            "created_at"       timestamptz DEFAULT NULL,
            "last_modified_at" timestamptz DEFAULT NULL
        );
    </update>

    <update id="createMessage_selected">
        CREATE TABLE "message_selected"
        (
            "status" varchar(32) UNIQUE NOT NULL
        );
    </update>

    <update id="createMessageResultTable">
        CREATE TABLE IF NOT EXISTS "message_result"
        (
            "result" varchar(32) UNIQUE NOT NULL
        );
    </update>

    <!--    <update id="createAgentTable">-->
    <!--        CREATE TABLE "agent_list"-->
    <!--        (-->
    <!--            "id" bigint UNIQUE NOT NULL-->
    <!--        );-->
    <!--    </update>-->

    <update id="foreignKeySet">
        ALTER TABLE "agent_table"
            ADD FOREIGN KEY ("receive_result", send_result) REFERENCES "message_result" ("result");
        ALTER TABLE "agent_table"
            ADD FOREIGN KEY ("selected") REFERENCES "message_selected" ("status");
        --         ALTER TABLE "agent_list"
--             ADD FOREIGN KEY ("agent_id") REFERENCES "agent_list" ("id");
    </update>

    <insert id="insertResult">
        INSERT INTO "message_result" (result)
        VALUES ('SUCCESS'),
               ('FAILED')
        ON CONFLICT (result)
            DO NOTHING;
    </insert>

    <insert id="message_selected_insert">
        INSERT INTO "message_result" (status)
        VALUES ('SELECTED'),
               ('UNSELECTED')
        ON CONFLICT (status)
            DO NOTHING;
    </insert>

    <!--    <insert id="agent_id_insert" parameterType="_long">-->
    <!--        INSERT INTO "agent_list" (agent_id)-->
    <!--        VALUES (#{agentId});-->
    <!--    </insert>-->
    <!--   default setting end -->
    <!--   default setting end -->
    <!--    =========================================================================================================================================-->


    <!--    =========================================================================================================================================-->
    <!-- common Query -->
    <select id="count" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM agent_table;
    </select>

    <select id="ping" resultType="java.lang.Boolean">
        SELECT 1;
    </select>

    <delete id="deleteTable">
        DELETE
        FROM agent_table;
    </delete>

    <delete id="deleteById" parameterType="_long">
        DELETE
        FROM agent_table
        WHERE id = #{id};
    </delete>

    <select id="selectById" parameterType="_long" resultType="nanoit.kr.domain.entity.MessageEntity">
        SELECT id,
               agent_id,
               selected,
               phone_number,
               send_result,
               callback_number,
               sender_name,
               content,
               send_time,
               receive_result,
               receive_time,
               created_at,
               last_modified_at
        FROM agent_table
        WHERE id = #{id};
    </select>

    <!--    <select id="selectByAgentId" parameterType="_long" resultType="nanoit.kr.domain.entity.MessageEntity">-->
    <!--        SELECT id,-->
    <!--               agent_id,-->
    <!--               selected,-->
    <!--               phone_number,-->
    <!--               send_result,-->
    <!--               callback_number,-->
    <!--               sender_name,-->
    <!--               content,-->
    <!--               send_time,-->
    <!--               receive_result,-->
    <!--               receive_time,-->
    <!--               created_at,-->
    <!--               last_modified_at-->
    <!--        FROM agent_table-->
    <!--        WHERE agent_id = #{agentId};-->
    <!--    </select>-->

    <insert id="insert" parameterType="nanoit.kr.domain.entity.MessageEntity">
        INSERT INTO agent_table(phone_number, callback_number, sender_name, content)
        VALUES (#{phoneNumber}, #{callbackNumber}, #{senderName}, #{content});
    </insert>

    <insert id="insertAll" parameterType="java.util.List">
        INSERT INTO agent_table (phone_number, callback_number, sender_name, content)
        VALUES
        <foreach collection="list" item="item" separator=",">
            (#{phoneNumber},#{item.callbackNumber},#{item.senderName},#{item.content})
        </foreach>
    </insert>
    <!-- common Query End-->
    <!--    =========================================================================================================================================-->


    <!--    =========================================================================================================================================-->
    <!-- Query settings for receive tables -->
    <select id="receive_count" resultType="_long">
        SELECT COUNT(*)
        FROM agent_table
        WHERE receive_result = 'SUCCESS'
          AND receive_time IS NOT NULL;
    </select>

    <select id="receive_selectById" parameterType="_long" resultType="nanoit.kr.domain.before.SendAckEntityBefore">
        SELECT id, receive_result, receive_time
        FROM agent_table
        WHERE id = #{id};
    </select>

    <select id="receive_selectAll" resultType="nanoit.kr.domain.before.SendAckEntityBefore">
        SELECT id, receive_result, receive_time
        FROM agent_table;
    </select>

    <update id="receive_update" parameterType="_long">
        UPDATE agent_table
        SET receive_result   = 'SUCCESS',
            receive_time     = now(),
            last_modified_at = now()

        WHERE id = #{id}
          AND selected = 'SELECTED'
          AND send_result = 'SUCCESS';
    </update>
    <!-- Query settings for receive tables End-->
    <!--    =========================================================================================================================================-->


    <!--    =========================================================================================================================================-->
    <!-- Query settings for receive tables -->
    <select id="send_selectAll" resultType="java.util.List">
        SELECT id, phone_num, callback_num, sender_name, content
        FROM agent_table
        WHERE selected = 'UNSELECTED';

    </select>

    <update id="send_select_update" parameterType="java.util.List">
        <foreach collection="list" item="item" separator=",">
            UPDATE agent_table
            SET selected = 'SELECTED',
            send_time = now(),
            last_modified_at = now()
            WHERE id = #{item.id};
        </foreach>

    </update>

    <update id="send_result_update" parameterType="_long">
        UPDATE agent_table
        SET send_result = 'SUCCESS'
        WHERE id = #{id};
    </update>

</mapper>

